// <auto-generated />
using System;
using EESV2.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EESV2.DAL.Migrations
{
    [DbContext(typeof(EESContext))]
    partial class EESContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("EESV2.DAL.Entities.Committee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecretaryID")
                        .HasColumnType("int");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SecretaryID");

                    b.HasIndex("StatusID");

                    b.ToTable("Committees");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.CommitteeStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CommitteeStatuses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Title = "فعال"
                        },
                        new
                        {
                            ID = 2,
                            Title = "غیر فعال"
                        });
                });

            modelBuilder.Entity("EESV2.DAL.Entities.EmploymentType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EmploymentTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Title = "رسمی"
                        },
                        new
                        {
                            ID = 2,
                            Title = "قرار دادی"
                        },
                        new
                        {
                            ID = 3,
                            Title = "پیمانکاری"
                        });
                });

            modelBuilder.Entity("EESV2.DAL.Entities.EvaluationType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EvaluationTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Title = "فرم کمی"
                        },
                        new
                        {
                            ID = 2,
                            Title = "فرم کیفی"
                        },
                        new
                        {
                            ID = 3,
                            Title = "نامشخص"
                        });
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Form", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DocumentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level3ProcessCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level3ProcessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level4ProcessCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level4ProcessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Impart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long?>("Cost")
                        .HasColumnType("bigint");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionExecute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDateExecute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExecutorID")
                        .HasColumnType("int");

                    b.Property<string>("ExecutorIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutorRegistrationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutorRegistrationTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImpartStatusID")
                        .HasColumnType("int");

                    b.Property<int>("ProposalID")
                        .HasColumnType("int");

                    b.Property<string>("StartDateExecute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TimeToExecute")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ExecutorID");

                    b.HasIndex("ImpartStatusID");

                    b.HasIndex("ProposalID");

                    b.ToTable("Imparts");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.ImpartStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ImpartStatuses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Title = "نامشخص"
                        },
                        new
                        {
                            ID = 2,
                            Title = "تایید و ابلاغ اجرایه توسط دبیرخانه نظام مشارکت و اقدام جهت اجرا"
                        },
                        new
                        {
                            ID = 3,
                            Title = "انجام برآورد مجری - منتظر تایید دبیرخانه نظام مشارکت"
                        },
                        new
                        {
                            ID = 4,
                            Title = "لطفا برآورد هزینه، برنامه، همکاران اجرایی پیشنهاد بررسی مجدد گردد"
                        },
                        new
                        {
                            ID = 5,
                            Title = "ارسال به ستاد انتقال"
                        },
                        new
                        {
                            ID = 6,
                            Title = "ارسال به ستاد ملی گاز"
                        });
                });

            modelBuilder.Entity("EESV2.DAL.Entities.NewQualityEvaluation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double?>("HrWork")
                        .HasColumnType("float");

                    b.Property<bool?>("PishOk")
                        .HasColumnType("bit");

                    b.Property<int>("Q1")
                        .HasColumnType("int");

                    b.Property<int>("Q10")
                        .HasColumnType("int");

                    b.Property<int>("Q11")
                        .HasColumnType("int");

                    b.Property<int>("Q12")
                        .HasColumnType("int");

                    b.Property<int>("Q13")
                        .HasColumnType("int");

                    b.Property<int>("Q14")
                        .HasColumnType("int");

                    b.Property<int>("Q15")
                        .HasColumnType("int");

                    b.Property<int>("Q16")
                        .HasColumnType("int");

                    b.Property<int>("Q17")
                        .HasColumnType("int");

                    b.Property<int>("Q18")
                        .HasColumnType("int");

                    b.Property<int>("Q2")
                        .HasColumnType("int");

                    b.Property<int>("Q3")
                        .HasColumnType("int");

                    b.Property<int>("Q4")
                        .HasColumnType("int");

                    b.Property<int>("Q5")
                        .HasColumnType("int");

                    b.Property<int>("Q6")
                        .HasColumnType("int");

                    b.Property<int>("Q7")
                        .HasColumnType("int");

                    b.Property<int>("Q8")
                        .HasColumnType("int");

                    b.Property<int>("Q9")
                        .HasColumnType("int");

                    b.Property<byte?>("Quality")
                        .HasColumnType("tinyint");

                    b.Property<int>("ReferralID")
                        .HasColumnType("int");

                    b.Property<string>("RejectReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ReferralID")
                        .IsUnique();

                    b.ToTable("NewQualityEvaluations");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Notification", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsShow")
                        .HasColumnType("bit");

                    b.Property<string>("PublishedDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Objection", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProposalID")
                        .HasColumnType("int");

                    b.Property<string>("Reasons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProposalID");

                    b.HasIndex("UserID");

                    b.ToTable("Objections");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Office", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParrentOfficeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ParrentOfficeID");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Participant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<int>("ProposalID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProposalID");

                    b.HasIndex("UserID");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.PortalMembershipType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PortalMembershipTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Title = "عادی"
                        },
                        new
                        {
                            ID = 2,
                            Title = "رئیس واحد"
                        },
                        new
                        {
                            ID = 3,
                            Title = "عضو شورای مشارکت"
                        },
                        new
                        {
                            ID = 4,
                            Title = "عضو کمیته تخصصی فرعی"
                        },
                        new
                        {
                            ID = 5,
                            Title = "ارزیاب تخصصی"
                        });
                });

            modelBuilder.Entity("EESV2.DAL.Entities.ProgressReport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Defects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImpartID")
                        .HasColumnType("int");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ImpartID");

                    b.ToTable("ProgressReports");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Proposal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Ch01")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch02")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch03")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch04")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch05")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch06")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch07")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch08")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch09")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch10")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch11")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch12")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch13")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch14")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch15")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch16")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch17")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch18")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch19")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch20")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch21")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch22")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch23")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch24")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch25")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch26")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch27")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch28")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch29")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch30")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch31")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch32")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch33")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch34")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch35")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch36")
                        .HasColumnType("bit");

                    b.Property<bool>("Ch37")
                        .HasColumnType("bit");

                    b.Property<string>("CodeBazr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentDescPr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesDabir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ejra5Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EjraDaily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EjraMonthly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EjraYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Get5Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GetDaily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GetMonthly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GetYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewDesPr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistrarID")
                        .HasColumnType("int");

                    b.Property<int>("RegistrarParticipatePercent")
                        .HasColumnType("int");

                    b.Property<string>("Sarfe5Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SarfeDaily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SarfeMonthly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SarfeYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<string>("SubjectPr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RegistrarID");

                    b.HasIndex("StatusID");

                    b.ToTable("proposals");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.ProposalStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProposalStatuses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Title = "ارجاع به ارزیابی"
                        },
                        new
                        {
                            ID = 2,
                            Title = "تصویب شده"
                        },
                        new
                        {
                            ID = 3,
                            Title = "رد شده"
                        },
                        new
                        {
                            ID = 4,
                            Title = "در دست برسی"
                        },
                        new
                        {
                            ID = 5,
                            Title = "اجرا شده"
                        },
                        new
                        {
                            ID = 6,
                            Title = "عودت از ارزیابی به دبیرخانه"
                        },
                        new
                        {
                            ID = 7,
                            Title = "سایر"
                        },
                        new
                        {
                            ID = 8,
                            Title = "تایید ارزیابی و اماده طرح در شورای مرکزی"
                        },
                        new
                        {
                            ID = 9,
                            Title = "ابلاغ به واحد مجری"
                        });
                });

            modelBuilder.Entity("EESV2.DAL.Entities.QualityEvaluation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double?>("HrWork")
                        .HasColumnType("float");

                    b.Property<int?>("K1")
                        .HasColumnType("int");

                    b.Property<int?>("K2")
                        .HasColumnType("int");

                    b.Property<int?>("K3")
                        .HasColumnType("int");

                    b.Property<int?>("K4")
                        .HasColumnType("int");

                    b.Property<int?>("K5")
                        .HasColumnType("int");

                    b.Property<int?>("K6")
                        .HasColumnType("int");

                    b.Property<int?>("K7")
                        .HasColumnType("int");

                    b.Property<int?>("K8")
                        .HasColumnType("int");

                    b.Property<bool?>("PishOk")
                        .HasColumnType("bit");

                    b.Property<byte?>("Quality")
                        .HasColumnType("tinyint");

                    b.Property<int>("ReferralID")
                        .HasColumnType("int");

                    b.Property<string>("RejectReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ReferralID")
                        .IsUnique();

                    b.ToTable("QualityEvaluations");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.QuantitativEvaluation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DateArz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ejra5Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EjraMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EjraYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErjraDaily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("HrWork")
                        .HasColumnType("float");

                    b.Property<string>("MablaghNahaiAlphabet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MablaghNahaiNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PishOk")
                        .HasColumnType("bit");

                    b.Property<byte?>("Q1")
                        .HasColumnType("tinyint");

                    b.Property<string>("Q10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Quality")
                        .HasColumnType("tinyint");

                    b.Property<int>("ReferralID")
                        .HasColumnType("int");

                    b.Property<string>("Sama5Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SamarDaily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SamarMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SamarYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sarfe5Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SarfeDaily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SarfeMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SarfeYear")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ReferralID")
                        .IsUnique();

                    b.ToTable("QuantitativEvaluations");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Referral", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EvaluationTypeID")
                        .HasColumnType("int");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProposalID")
                        .HasColumnType("int");

                    b.Property<int>("ReciverID")
                        .HasColumnType("int");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SenderID")
                        .HasColumnType("int");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EvaluationTypeID");

                    b.HasIndex("ProposalID");

                    b.HasIndex("ReciverID");

                    b.HasIndex("SenderID");

                    b.HasIndex("StatusID");

                    b.ToTable("Referrals");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.ReferralStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ReferralStatuses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Title = "مشاهده شده"
                        },
                        new
                        {
                            ID = 2,
                            Title = "مشاهده نشده"
                        },
                        new
                        {
                            ID = 3,
                            Title = "ارزیابی شده"
                        });
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Title = "Secretary"
                        });
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Survey", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSeenByAdmin")
                        .HasColumnType("bit");

                    b.Property<int>("Q1")
                        .HasColumnType("int");

                    b.Property<int>("Q10")
                        .HasColumnType("int");

                    b.Property<int>("Q11")
                        .HasColumnType("int");

                    b.Property<int>("Q12")
                        .HasColumnType("int");

                    b.Property<int>("Q13")
                        .HasColumnType("int");

                    b.Property<int>("Q14")
                        .HasColumnType("int");

                    b.Property<int>("Q15")
                        .HasColumnType("int");

                    b.Property<int>("Q16")
                        .HasColumnType("int");

                    b.Property<string>("Q17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Q2")
                        .HasColumnType("int");

                    b.Property<string>("Q20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Q3")
                        .HasColumnType("int");

                    b.Property<int>("Q4")
                        .HasColumnType("int");

                    b.Property<int>("Q5")
                        .HasColumnType("int");

                    b.Property<string>("Q6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Q8")
                        .HasColumnType("int");

                    b.Property<int>("Q9")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Surveys");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddressHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmploymentTypeID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficeID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortalMembershipTypeID")
                        .HasColumnType("int");

                    b.Property<int>("PostID")
                        .HasColumnType("int");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EmploymentTypeID");

                    b.HasIndex("OfficeID");

                    b.HasIndex("PortalMembershipTypeID");

                    b.HasIndex("PostID");

                    b.HasIndex("StatusID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.UserCommittee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CommitteeID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CommitteeID");

                    b.HasIndex("UserId");

                    b.ToTable("UserCommittees");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.UserImpart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ImpartID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ImpartID");

                    b.HasIndex("UserID");

                    b.ToTable("UserImparts");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.UserPost", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserPosts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Title = "تست"
                        });
                });

            modelBuilder.Entity("EESV2.DAL.Entities.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.UserStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserStatuses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Title = "فعال"
                        },
                        new
                        {
                            ID = 2,
                            Title = "غیر فعال"
                        },
                        new
                        {
                            ID = 3,
                            Title = "بازنشسته"
                        });
                });

            modelBuilder.Entity("EESV2.DAL.Entities.VisitorStatistic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisitCount")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("VisitorStatistics");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Committee", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.User", "Secretary")
                        .WithMany("CommitteesSecretary")
                        .HasForeignKey("SecretaryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.CommitteeStatus", "Status")
                        .WithMany("Committees")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Secretary");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Impart", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.User", "Executor")
                        .WithMany("Imparts")
                        .HasForeignKey("ExecutorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.ImpartStatus", "ImpartStatus")
                        .WithMany("Imparts")
                        .HasForeignKey("ImpartStatusID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.Proposal", "Proposal")
                        .WithMany("Imparts")
                        .HasForeignKey("ProposalID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Executor");

                    b.Navigation("ImpartStatus");

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.NewQualityEvaluation", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.Referral", "Referral")
                        .WithOne("NewQualityEvaluation")
                        .HasForeignKey("EESV2.DAL.Entities.NewQualityEvaluation", "ReferralID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Objection", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.Proposal", "Proposal")
                        .WithMany("Objections")
                        .HasForeignKey("ProposalID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.User", "User")
                        .WithMany("Objections")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proposal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Office", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.Office", "ParrentOffice")
                        .WithMany("ChildOffices")
                        .HasForeignKey("ParrentOfficeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParrentOffice");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Participant", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.Proposal", "Proposal")
                        .WithMany("HelpersToRegistrar")
                        .HasForeignKey("ProposalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.User", "User")
                        .WithMany("ProposalsThatHelped")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proposal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.ProgressReport", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.Impart", "Impart")
                        .WithMany("Reports")
                        .HasForeignKey("ImpartID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Impart");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Proposal", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.User", "Registrar")
                        .WithMany("Proposals")
                        .HasForeignKey("RegistrarID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.ProposalStatus", "Status")
                        .WithMany("proposals")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Registrar");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.QualityEvaluation", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.Referral", "Referral")
                        .WithOne("QualityEvaluation")
                        .HasForeignKey("EESV2.DAL.Entities.QualityEvaluation", "ReferralID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.QuantitativEvaluation", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.Referral", "Referral")
                        .WithOne("QuantitativEvaluation")
                        .HasForeignKey("EESV2.DAL.Entities.QuantitativEvaluation", "ReferralID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Referral", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.EvaluationType", "EvaluationType")
                        .WithMany("Referrals")
                        .HasForeignKey("EvaluationTypeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EESV2.DAL.Entities.Proposal", "Proposal")
                        .WithMany("Referrals")
                        .HasForeignKey("ProposalID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.User", "Reciver")
                        .WithMany("RecivedReferrals")
                        .HasForeignKey("ReciverID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.User", "Sender")
                        .WithMany("SentReferrals")
                        .HasForeignKey("SenderID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.ReferralStatus", "Status")
                        .WithMany("Referrals")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EvaluationType");

                    b.Navigation("Proposal");

                    b.Navigation("Reciver");

                    b.Navigation("Sender");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Survey", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.User", "User")
                        .WithMany("Surveys")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.User", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.EmploymentType", "EmploymentType")
                        .WithMany("Users")
                        .HasForeignKey("EmploymentTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.Office", "Office")
                        .WithMany("Users")
                        .HasForeignKey("OfficeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.PortalMembershipType", "PortalMembershipType")
                        .WithMany("Users")
                        .HasForeignKey("PortalMembershipTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.UserPost", "Post")
                        .WithMany("Users")
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.UserStatus", "Status")
                        .WithMany("Users")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EmploymentType");

                    b.Navigation("Office");

                    b.Navigation("PortalMembershipType");

                    b.Navigation("Post");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.UserCommittee", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.Committee", "Committee")
                        .WithMany("Members")
                        .HasForeignKey("CommitteeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.User", "User")
                        .WithMany("UserCommittees")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Committee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.UserImpart", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.Impart", "Impart")
                        .WithMany("Hamkaran")
                        .HasForeignKey("ImpartID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.User", "User")
                        .WithMany("HamkarImparts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Impart");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.UserRole", b =>
                {
                    b.HasOne("EESV2.DAL.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EESV2.DAL.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Committee", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.CommitteeStatus", b =>
                {
                    b.Navigation("Committees");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.EmploymentType", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.EvaluationType", b =>
                {
                    b.Navigation("Referrals");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Impart", b =>
                {
                    b.Navigation("Hamkaran");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.ImpartStatus", b =>
                {
                    b.Navigation("Imparts");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Office", b =>
                {
                    b.Navigation("ChildOffices");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.PortalMembershipType", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Proposal", b =>
                {
                    b.Navigation("HelpersToRegistrar");

                    b.Navigation("Imparts");

                    b.Navigation("Objections");

                    b.Navigation("Referrals");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.ProposalStatus", b =>
                {
                    b.Navigation("proposals");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Referral", b =>
                {
                    b.Navigation("NewQualityEvaluation");

                    b.Navigation("QualityEvaluation");

                    b.Navigation("QuantitativEvaluation");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.ReferralStatus", b =>
                {
                    b.Navigation("Referrals");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.User", b =>
                {
                    b.Navigation("CommitteesSecretary");

                    b.Navigation("HamkarImparts");

                    b.Navigation("Imparts");

                    b.Navigation("Objections");

                    b.Navigation("Proposals");

                    b.Navigation("ProposalsThatHelped");

                    b.Navigation("RecivedReferrals");

                    b.Navigation("SentReferrals");

                    b.Navigation("Surveys");

                    b.Navigation("UserCommittees");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.UserPost", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EESV2.DAL.Entities.UserStatus", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
