@using EESV2.DAL.ViewModels.ReportMonitoringIndicatorsOfEES
@model ReportMonitoringIndicatorsOfEESViewModel
@inject IUnitOfWork _uw
@inject IUtilities utilities
@{
    List<Office> offices = _uw.OfficeRepository.Get().ToList();
    var viewModel = (ReportMonitoringIndicatorsOfEESViewModel)ViewData["viewModel"];
    ViewData["page"] = "RMI";
    ViewData["Title"] = "پایش شاخص های نظام مشارکت";
    Layout = "Layout";
}

<!--TreeView Css-->
<style type="text/css">
    /* Remove default bullets */
    #myUL {
        direction: rtl;
        list-style-type: none;
    }

        #myUL ul {
            direction: ltr;
            list-style-type: none;
        }
    /* Remove margins and padding from the parent ul */
    #myUL {
        margin: 0;
        padding: 0;
    }

        #myUL li {
            padding-bottom: 10px;
            display: block;
            margin: 0;
        }
        /* Style the caret/arrow */
        #myUL .caret1 {
            cursor: pointer;
            user-select: none; /* Prevent text selection */
        }

            /* Create the caret/arrow with a unicode, and style it */
            #myUL .caret1::before {
                content: "\25B6";
                color: black;
                display: inline-block;
                margin-right: 6px;
            }

        /* Rotate the caret/arrow icon when clicked on (using JavaScript) */
        #myUL .caret-down::before {
            transform: rotate(90deg);
        }

        /* Hide the nested list */
        #myUL .nested {
            display: none;
        }

        /* Show the nested list when the user clicks on the caret/arrow (with JavaScript) */
        #myUL .active {
            padding-top: 10px;
            display: block;
        }
</style>
<!-- babakhani datepicker -->
<link rel="stylesheet" href="~/dist/css/persian-datepicker-0.4.5.min.css" />
<link rel="stylesheet" href="~/dist/css/animate.css">
<script src="~/dist/js/wow.min.js"></script>
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1 class="wow animate__animated animate__lightSpeedInRight">
            پایش شاخص های نظام مشارکت
        </h1>
        <ol class="breadcrumb">
            <li><a href="/Home/Index"><i class="fas fa-home"></i> خانه</a></li>
            <li><a href="#">اطلاعات و آمار</a></li>
            <li class="active">پایش شاخص های نظام مشارکت</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <form method="post" action="/ReportMonitoringIndicatorsOfEES" class="box wow animate__animated animate__zoomInDown" data-wow-delay=".3s">
                    <div class="col-md-12">
                        <div class="box wow animate__animated animate__zoomInDown" data-wow-delay=".3s">
                            <div class="box-header with-border">
                                <div asp-validation-summary="All" class="text-danger"></div>
                                <h3 class="box-title">بخش مربوط و تاریخ مورد نظر برای گزارش گیری را وارد کنید.</h3>

                                <div class="box-tools pull-right">
                                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse">
                                        <i class="fas fa-chart-bar"></i>
                                    </button>
                                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="" data-original-title="Remove">
                                        <i class="fa fa-users"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="box-body">

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="col-md-6">
                                            <div class="form-group" style="max-height:200px;overflow-y:auto;overflow-x:hidden">
                                                <ul id="myUL"></ul>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="row">
                                                <div class="col-md-12 form-horizontal">
                                                    <div class="form-group">
                                                        <input type="text" asp-for="Date" class="form-control pull-right persianDatepicker">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div style="direction:rtl">
                                    <input value="نمایش اطلاعات" type="submit" class="btn btn-primary" style="width:100px" />
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        @if (viewModel != null)
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-info">
                        <div class="box-header with-border">
                            <h3 style="padding:7px 0 7px 0" class="box-title col-md-3">تعداد پیشنهادات در هر روز : </h3>
                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="box-body">
                            <div class="chart">
                                <canvas id="barChart1" style="height: 229px; width: 594px;" width="742" height="286"></canvas>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-info">
                        <div class="box-header with-border">
                            <h3 style="padding:7px 0 7px 0" class="box-title col-md-3">تعداد پیشنهادات در هر ماه در سال</h3>
                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="box-body">
                            <div class="chart">
                                <canvas id="barChart2" style="height: 229px; width: 594px;" width="742" height="286"></canvas>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                </div>
            </div>
        }
    </section>
    <!-- /.content -->
</div>
@if (viewModel != null)
{
    <!-- ChartJS -->
    <script src="../../bower_components/Chart.js/Chart.js"></script>
    <!--تنظیمات Barchart-->

    <script>
    $(function () {
        var barChartData = {
            labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',
                '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24',
                '25', '26', '27', '28', '29', '30', '31'],
            datasets: [

                {
                    label: 'Digital Goods',
                    fillColor: 'rgba(60,141,188,0.9)',
                    strokeColor: 'rgba(60,141,188,0.8)',
                    pointColor: '#3b8bba',
                    pointStrokeColor: 'rgba(60,141,188,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(60,141,188,1)',
                    data: @Html.Raw(Json.Serialize(viewModel.Days))
                }
            ]
        }
        var barChartCanvas = $('#barChart1').get(0).getContext('2d')
        var barChart = new Chart(barChartCanvas)
        barChartData.datasets[0].fillColor = '#00a65a'
        barChartData.datasets[0].strokeColor = '#00a65a'
        barChartData.datasets[0].pointColor = '#00a65a'
        var barChartOptions = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //String - Colour of the grid lines
            scaleGridLineColor: 'rgba(0,0,0,.05)',
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 2,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 1,
            //String - A legend template
            legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: true
        }

        barChartOptions.datasetFill = false
        barChart.Bar(barChartData, barChartOptions)
    })
    </script>
    <script>
    $(function () {
        var barChartData = {
            labels: ['فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],
            datasets: [

                {
                    label: 'Digital Goods',
                    fillColor: 'rgba(60,141,188,0.9)',
                    strokeColor: 'rgba(60,141,188,0.8)',
                    pointColor: '#3b8bba',
                    pointStrokeColor: 'rgba(60,141,188,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(60,141,188,1)',
                    data: @Html.Raw(Json.Serialize(viewModel.Months))
                }
            ]
        }
        var barChartCanvas = $('#barChart2').get(0).getContext('2d')
        var barChart = new Chart(barChartCanvas)
        barChartData.datasets[0].fillColor = '#00a65a'
        barChartData.datasets[0].strokeColor = '#00a65a'
        barChartData.datasets[0].pointColor = '#00a65a'
        var barChartOptions = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //String - Colour of the grid lines
            scaleGridLineColor: 'rgba(0,0,0,.05)',
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 2,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 1,
            //String - A legend template
            legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: true
        }

        barChartOptions.datasetFill = false
        barChart.Bar(barChartData, barChartOptions)
    })
    </script>
    <script>
        function Year2Change(element) {
            var url = new URL(window.location.href);
            url.searchParams.set("Year2", element.value)
            window.location.href = url;
        }
        function Year1Change(element) {
            var url = new URL(window.location.href);
            url.searchParams.set("Year1", element.value)
            window.location.href = url;
        }
        function Month1Change(element) {
            var url = new URL(window.location.href);
            url.searchParams.set("Month1", element.value)
            window.location.href = url;
        }
    </script>

}
<!-- babakhani datepicker -->
<script src="~/dist/js/persian-date-0.1.8.min.js"></script>
<script src="~/dist/js/persian-datepicker-0.4.5.min.js"></script>
<script>
    $(document).ready(function () {
        let forms = document.getElementsByTagName("form");
        for (let form of forms) {
            form.addEventListener('submit', (e) => {
                e.preventDefault();
                let persianDatepickers = form.getElementsByClassName("persianDatepicker");
                for (let persianDatepicker of persianDatepickers) {
                    let enNumbers = fixNumbers(persianDatepicker.value);
                    if (enNumbers.split('/').length != 3) {
                        enNumbers += "/01";
                    }
                    persianDatepicker.value = enNumbers;
                }
                e.target.submit();
            })
        }
        $('.persianDatepicker').persianDatepicker({
            initialValueType: 'persian',
            persianDigit: false,
            format: 'YYYY/MM',
            observer: true,
            timePicker: {
                enabled: false
            },
            checkYear: function (year) {
                return year >= 1391;
            }
        });
        function fixNumbers(str) {
            let persianNumbers = [/۰/g, /۱/g, /۲/g, /۳/g, /۴/g, /۵/g, /۶/g, /۷/g, /۸/g, /۹/g];
            let arabicNumbers = [/٠/g, /١/g, /٢/g, /٣/g, /٤/g, /٥/g, /٦/g, /٧/g, /٨/g, /٩/g];
            if (typeof str === 'string') {
                for (var i = 0; i < 10; i++) {
                    str = str.replace(persianNumbers[i], i).replace(arabicNumbers[i], i);
                }
            }
            return str;
        };
    });
</script>
<script>
    $.ajax({
        url: "/Office/Offices",
        success: (data) => {
            debugger
            let Semats = [];
            Semats = data;
            for (var j = 0; j < Semats.length; j++) {
                if (Semats[j].parrentOfficeID != null) {

                    let parrent = document.getElementById(Semats[j].parrentOfficeID);
                    if (parrent.children.length == 1) {
                        let item = `                                <span class="caret1"></span>
                                                                    <lable>
                                                                        <input name='OfficeIDs' type="checkbox" value='${parrent.id}' />
                                                                        ${parrent.innerText}
                                                                    </lable>
                                                                    <ul class="nested">
                                                                        <li id='${Semats[j].id}'>
                                                                            <lable>
                                                                                <input name='OfficeIDs' type="checkbox" value='${Semats[j].id}' />
                                                                                ${Semats[j].name}
                                                                            </lable>
                                                                        </li >
                                                                    </ul>`
                        parrent.innerHTML = item;
                        //parrent.addEventListener('change', (e) => {
                        //    console.log(e.target.checked);
                        //})
                    }
                    else {
                        let ulofparrent = parrent.getElementsByTagName('ul')[0];
                        let item = document.createElement("li");
                        item.setAttribute('id', Semats[j].id);
                        item.innerHTML = `                                  <lable>
                                                                                <input name='OfficeIDs' type="checkbox" value='${Semats[j].id}' />
                                                                                ${Semats[j].name}
                                                                            </lable>`;
                        ulofparrent.appendChild(item);
                    }
                }
                else {
                    let item = `<li id='${Semats[j].id}'>
                                    <lable>
                                        <input name='OfficeIDs' type="checkbox" value='${Semats[j].id}' />
                                        ${Semats[j].name}
                                    </lable>
                                </li >`;
                    document.getElementById("myUL").innerHTML = item;
                }
            }
            var toggler = document.getElementsByClassName("caret1");
            var i;
            for (i = 0; i < toggler.length; i++) {
                toggler[i].addEventListener("click", function () {
                    this.parentElement.querySelector(".nested").classList.toggle("active");
                    this.classList.toggle("caret-down");
                });
            }
            let checkboxes = document.getElementById("myUL").getElementsByTagName("input");
            for (var checkbox of checkboxes) {
                checkbox.addEventListener('change', (e) => {
                    let chs = document.getElementById(e.target.value).getElementsByTagName("input");
                    for (var ch of chs) {
                        ch.checked = e.target.checked;
                    }
                })
            }

        },
        error: (err) => {

        }
    })

</script>